
Un protocolo especifica reglas en la comunicacion entre dos entes, en este caso entre dos computudoras.

HTTP (Hyper Text Transfer Protocol) fue creado especificamente para la web.

Una de las cosas que especifica el protocolo HTTP son los verbos:

GET: solicitar datos o algun recurso.
HEAD: traer headers (como una peticion GET pero sin contenidos). Es util cuando vamos a utilizar APIs, para comprobar si lo que vamos a enviar esta correcto y puede ser procesado.

POST: enviar datos a un recurso para la creaci√≥n.

PUT: reemplazar por completo un recurso.

PATCH: reemplazar parcialmente un recurso.

DELETE: eliminar un recurso.

Otra de las cosas que especifica el protocolo HTTP son los codigo de estado (status codes). Sirven para describir el estado de la peticion hecha al servidor.

1xx: Indican que la peticion fue recibida y el servidor sigue trabajando en el proceso, es decir, no fue exitosa ni fue err√≥nea, sino que esta siendo procesada aun.

2xx: Indican que la peticion fue recibida y procesada correctamente.

3xx: Indican que hay que tomar acciones adicionales para completar la solicitud. Por lo general estos codigos indican redireccion. Generalmente en los APIs no se usan redirecciones porque no contienen estados, es decir, toda la informacion esta contenida en una solicitud, no se guarda un estado en el servidor con una sesion por ejemplo.

4xx: Indican errores del lado del cliente, por ejemplo: se hizo mal la solicitud, faltan datos, headers o cualquier otro error que pueda ocurrir.

5xx: Indican errores del servidor. Suelen aparecer cuando existe un fallo en la ejecuci√≥n en el servidor.
Los codigos mas comunes a la hora de interactuar con un API son:

200: Todo esta OK.
201: Todo OK cuando se hizo una solicitud POST, el recurso se creo y se guardo correctamente.
204: Indica que la solicitud se completo correctamente pero no devolvio informacion. Es muy comun cuando se hacen peticiones con el verbo DELETE.
400: Bad Request, algo esta mal en la peticion. Se nos olvido enviar un dato o algo relacionado. Por lo general la respuesta nos especifica cuales fueron los errores a la hora de hacer la peticion.
401: Unauthorized, es decir, no estamos autorizados (autenticados) a realizar la peticion.
403: Forbidden, yo no tengo acceso a ese recurso aunque este autenticado.
404: Not Found, no existe el recurso que se esta intentando acceder.
500: Interna Server Error, es un error que retorna el servidor cuando la solicitud no pudo ser procesada. Por lo general, si no tenemos acceso al backend, no tenemos control sobre los errores 500 que retorna un API.


-----


Play
Mute


Current Time 
0:24
/
Duration 
10:33
1xPlayback Rate
Captions
Auto (720p)

Picture-in-Picture
Fullscreen
Reportar un problema
Llamados a un API con el m√©todo post utilizando Form Data
Llamados a un API con el m√©todo post utilizando JSON
Eduardo √Ålvarez
Eduardo √Ålvarez
Curso de Postman
Curso de Postman

Aportes
54
Preguntas
10
Marcadores
0
M√°s Votados
Nuevos
Sin Responder
juancruzb
Escribe aqu√≠ tu comentario
Que bueno ser√≠a poder utilizar la API del curso para poder resolver los retos pero‚Ä¶ NO FUNCIONA!

Y nada que dan soluci√≥n

yo no se ni como instalarlo üò†

Que bueno seria que se hubieran tomado la molestia de contestar üòï y resolver esto.

A√∫n sin funcionar üò¶

Simplemente es un demo, podrian probar usando alguna api de internet como : https://jsonplaceholder.typicode.com/

Lo que importa es que entiendan el concepto, y puedan aplicarlo a cualquier API.

Si no es con la API de forma local, tambien nos dieron una lista bastante larga de APIs publicas que funcionan perfecto para el curso, eso si, es necesario leer un poco mas, pero creo que hacer como borregos lo que hace el instructor no es tan bueno.

Suerte.

APIs publicas

https://github.com/public-apis/public-apis

estoy tratando de usar el API que dejaron https://jsonplaceholder.typicode.com/ pero nose como utilizarlo y ya me lei la documentacion poro no estoy seguro si estoy haciendo algo mal alquien me ayuda?

Los errores fueron corregidos.

f

Ya est√° corregido en las lecturas pasadas, pero no es excusa. Estoy utilizando a la par la API de Rick and Morty‚Ä¶

Si, en mi opini√≥n debieron crear la API Rest con Node, (creo que todo developer tiene instalado Node) y los datos en un archivo db.json. Se complicaron mucho con la API en Django.

Mi proyecto ser√° crear mi API o terminar la API del curso.

It works, !!, a ciegas lo ejecute pero trabaja, lo cual no deberia Captura de pantalla 2020-10-03 a la(s) 18.40.21.png
Captura de pantalla 2020-10-03 a la(s) 18.27.39.png

Igual creo que dure mas instalando las cosas en widnows q lo que durara el curso. pero te entiendo a mi tambien me gusto hacer que funcione.

Pues para est√° fecha, me funciona la API y hasta el momento he podido trabajar los retos

no solucionan aun

Concuerdo

Hay varias APIs p√∫blicas que se pueden usar de la misma forma üòÉ (incluso es m√°s interesante porque tienen m√°s datos üòõ).

Ver m√°s respuestas
Actualicen la API que no sirve

x2

Si no pueden usar la api de platzi en local, en esta pagina https://jsonplaceholder.typicode.com/ pueden utilizarla para mandarle POST, GET y demas que siempre responde algo. No podran ver la informacion actualizada pero sirve para tener algo en postman

Gracias, la verdad ayuda mucho, estar√≠a genial que actualizaran la API de este curso üò™

Gracias!

Ver m√°s respuestas
1er Paso: Ver documentaci√≥n y mirar como autenticarnos [con un user y password]
2do Paso:El endpoint de la API en este caso es un espacio netamente para la generaci√≥n de tokens de acceso, el cual seria ‚Ä¶/api/api-token-auth/
3er Paso: Agrega el user y la contrase√±a por medio de JSON en Postman teniendo seleccionado POST(al lado izquierdo de la url) y abajo vas a body>raw>text>JSON(esta opci√≥n se despliega si le das click a text en el nivel del men√∫ que se encuentra raw)
4to Paso: Verifica en Header el tipo de contenido que se va a enviar al servidor, en este caso es Key[Content-Key]-Value[application/json] ‚úîÔ∏è(listo)
5to paso: Escribe dentro de una llave el user y el password, todo va entre comillas, esto retornara un token (lo usaremos en el siguiente paso)
6to paso:Si queremos agregar al servidor a un comentario tienes que poner el Headers el token del anterior paso, esto se hace a√±adiendo un espacio en el Headers de donde vamos a realizar el comentario** entonces, vamos a Headers y ponemos KEY=[Authorization] y el VALUE =[token aqu√≠ va el token]//Esta es la manera de tener acceso a esta API
7to paso: Ya hecho el anterior paso con el endpoint ‚Ä¶api/coments/ y en el body>raw>JSON podremos poner un coment especificado su destino con la palabra material, en este caso esa es la palabra clave para identificar en qu√© secci√≥n ir√° este cometnario.
//Son apuntes, esto varia seg√∫n la API seg√∫n entiendo, no lo comprobe ya que la API no sirve sin embargo dejo un resumen


